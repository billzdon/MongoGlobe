Features under the section marked 'In Progress' are currently in the process of being implemented. They are to be considered unstable and not ready for use.

Features under the section marked 'Current' are completed but pending release as a gem. If you need any of these, you'll need to use the latest source from the git repository.

Features under a numbered section are complete and available in the Wrest gem.

== Coming soon
 * Cookie support
 * Proxy support
 * Multi-part post support on curl
 
== In progress
 * 304/ETag response caching
 * Keep-alive support for libcurl

== 0.1.1
 * Multipart post and put using Net::Http

== 0.1.0
 * Added Nokogiri as a fallback for LibXML Ruby before we give up and use REXML. (Nokogiri is available on JRuby, unlike LibXML-ruby)
 * Added code to attempt to load JREXML (for what it's worth) when using REXML on JRuby
 * Ensure that Wrest throws an exception when an actual request is made in a test environment in Rails (RAILS_ENV == 'test')
 * Support for keep-alive connections via Wrest::Http::Session and Wrest::Http::Response#connection_closed?
 * Create two convenience Post methods on Uri - one for application/x-www-form-urlencoded and the other normal
 * Optional libcurl implementations of the Request/Response classes (for those on MRI who need better performance). See examples/delicious.rb, examples/facebook.rb. Note that while there is a great deal of API compatibility, everything may not behave exactly the same under libcurl. Please do report inconsistencies.
 * Added live functional tests to codebase (rake spec:functional, needs spec/functional/sample_rails_app running on port 3000)
 
== 0.0.9
 * Added redirect follow support for GET requests (see examples/redirection.rb)
 * Auto redirection limit
 * Request timeout limit config
 * Added an alias_accessor macro to allow alternative names for attribute accessors (see examples/wow_realm_status.rb) 
 * Removed the need to explicitly include AttributesContainer::Typecaster or to use the enable_typecasting_support macro. The call to typecast now does this for us. See AttributesContainer#typecast and AttributesContainer::Typecaster#typecast
   
== 0.0.8
 * Added URI extension using the [] method (see examples/delicious.rb)
 * Refactored out Request as the first step to adding Response caching
 